package com.task.action.dmltry;

import java.io.File;
import java.util.List;
import java.util.Map;

import org.apache.struts2.ServletActionContext;

import com.opensymphony.xwork2.ActionContext;
import com.task.Server.dmltry.DmlAppFileUrlServer;
import com.task.Server.dmltry.DmltryAppFilesServer;
import com.task.entity.dmltry.DmlAppFileUrl;
import com.task.entity.dmltry.DmltryAppFiles;
import com.task.util.Upload;
import com.task.util.Util;

/**
 * @author licong
 *
 */
public class DmltryAppFilesAction {

	private DmltryAppFilesServer dmltryAppFilesServer;
	private DmltryAppFiles dmltryAppFiles;
	private List<DmltryAppFiles> list;
	private boolean addDml;
	private DmltryAppFiles dmltryAppFiles2;
	private DmltryAppFiles dmltryAppFiles3;
	private DmlAppFileUrl dmlAppFileUrl;
	private DmlAppFileUrl dmlAppFileUr2;
	private List<DmltryAppFiles> dmltryAppFileslist;
	private DmlAppFileUrlServer dmlAppFileUrlServer;
	
	private String successMessage;// 成功消息
	private String errorMessage;// 错误消息
	// 分页
	private String cpage = "1";
	private String total;
	private String url;
	private int pageSize = 15;
	private DmltryAppFiles dmltryAppFiles4;

	
	// 上传文件对象
	private File fujian;
	//上传文件名
	private String fujianFileName;
	// 上传文件类型
	private String fujianContentType;
	
	
	
	
	public String selAll() {
		ActionContext.getContext().getSession().put("dmltryAppFiles", "DmltryAppFiles");
		list = dmltryAppFilesServer.selAll();
		return "selall";
	}

	/**
	 * 添加
	 * 
	 * @return
	 */
	public String toAdd(){
		return "dmltryAppFiles_add";
	}
	
	public String add(){
		errorMessage = dmltryAppFilesServer.addDmltryAppFiles(dmltryAppFiles);
		if("true".contentEquals(errorMessage)){
			errorMessage = "添加成功！";
			url = "DmltryAppFilesAction!fenyeandtj.action";
		}
		return "error";
	}
	
	
	/**
	 * 添加明细
	 * @return
	 * 
	 */
	public String addin(){
		if (fujian != null) {
		//文件名称
		String realFileName =Util.getDateTime("yyyyMMddHHmmss");
		// 打开存放文件的位置	// 文件路径
		String realFilePath = "/upload/file/appFile";
		
		String path = ServletActionContext.getServletContext()
				.getRealPath(realFilePath);
		File file = new File(path);
		if (!file.exists()) {
			file.mkdirs();// 如果不存在文件夹就新建
		}
		Upload upload=new Upload();
		realFileName=upload.UploadFile(fujian, fujianFileName, null,
				realFilePath, null);
		dmlAppFileUrl.setAppfileurlfj(realFileName);// 文件新名称
		errorMessage=dmlAppFileUrlServer.addDmlAppFileUrl(dmlAppFileUrl);	
		if ("true".contentEquals(errorMessage)) {
			errorMessage = "添加成功！";
			url = "DmlAppFileUrlAction!selct.action?dmltryAppFiles.id="+dmlAppFileUrl.getDmltryAppFiles().getId();
		}
		}else {
			errorMessage = "文件空为空";
		}
		
		return "error";
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	/**
	 * 根据id查询
	 * @return
	 */
	public String selidDmltryAppFiles(){
		dmltryAppFiles2=dmltryAppFilesServer.selidDmltryAppFiles(dmltryAppFiles.getId());
		
		return	"DmltryAppFiles_update";
	}
	//添加明细
	public String toAddDmlAppFileUrl(){
		dmltryAppFiles2=dmltryAppFilesServer.selidDmltryAppFiles(dmltryAppFiles.getId());
		return	"DmlAppFileUrl_add";
	}
	
	/**
	 * 修改
	 * @return
	 */
	public String updateDmltryAppFiles(){
		errorMessage=dmltryAppFilesServer.updateDmltryAppFiles(dmltryAppFiles);
		if("true".contentEquals(errorMessage)){
			errorMessage = "修改成功！";
			url = "DmltryAppFilesAction!fenyeandtj.action";
		}
		return "error";
	}
	
	/**
	 * 删除
	 * @return
	 */
	@SuppressWarnings("delteDmltryAppFiles")
	public String delteDmltryAppFiles(){
		
		errorMessage=dmltryAppFilesServer.delteDmltryAppFiles(dmltryAppFiles.getId());
		if("true".contentEquals(errorMessage)){
			errorMessage = "删除成功！";
			url = "DmltryAppFilesAction!fenyeandtj.action";
		}
		return "error";
	}
	
	/**
	 * 分页加条件查询
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public String fenyeandtj(){
		pageSize = 2;
		if (dmltryAppFiles !=null ) {
			ActionContext.getContext().getSession().put("dmlAppFileUrlfy",
					dmltryAppFiles);
		}else {
			//保持分页
			dmltryAppFiles=(DmltryAppFiles)ActionContext.getContext()
					.getSession().get("dmltryAppFilesfy");
		}
		///注意一下bject[] object
		 Map<Integer, Object> map=dmltryAppFilesServer.fenyandtj(dmltryAppFiles, Integer.parseInt(cpage), pageSize);
		 dmltryAppFileslist=(List<DmltryAppFiles>)map.get(1);
		if (dmltryAppFileslist!=null && dmltryAppFileslist.size()>0) {
			int count=(Integer) map.get(2);
			int pageCount=(count+pageSize-1)/pageSize;
			this.setTotal(pageCount+"");
			this.setUrl("DmltryAppFilesAction!fenyeandtj.action");
			successMessage=null;
		}else {
			errorMessage = "没有找到你要查询的内容,请检查后重试!";
		}
		return	"selall";
	}
	
	
	
	
	
	public DmltryAppFiles getDmltryAppFiles() {
		return dmltryAppFiles;
	}

	public void setDmltryAppFiles(DmltryAppFiles dmltryAppFiles) {
		this.dmltryAppFiles = dmltryAppFiles;
	}

	public DmltryAppFilesServer getDmltryAppFilesServer() {
		return dmltryAppFilesServer;
	}

	public void setDmltryAppFilesServer(DmltryAppFilesServer dmltryAppFilesServer) {
		this.dmltryAppFilesServer = dmltryAppFilesServer;
	}

	public List<DmltryAppFiles> getList() {
		return list;
	}

	public void setList(List<DmltryAppFiles> list) {
		this.list = list;
	}

	public boolean isAddDml() {
		return addDml;
	}

	public void setAddDml(boolean addDml) {
		this.addDml = addDml;
	}

	public String getSuccessMessage() {
		return successMessage;
	}

	public void setSuccessMessage(String successMessage) {
		this.successMessage = successMessage;
	}

	public String getErrorMessage() {
		return errorMessage;
	}

	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

	public String getCpage() {
		return cpage;
	}

	public void setCpage(String cpage) {
		this.cpage = cpage;
	}

	public String getTotal() {
		return total;
	}

	public void setTotal(String total) {
		this.total = total;
	}

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public int getPageSize() {
		return pageSize;
	}

	public void setPageSize(int pageSize) {
		this.pageSize = pageSize;
	}

	@Override
	public String toString() {
		return "DmltryAppFilesAction [addDml=" + addDml + ", cpage=" + cpage + ", dmltryAppFiles=" + dmltryAppFiles
				+ ", dmltryAppFiles2=" + dmltryAppFiles2 + ", dmltryAppFilesServer=" + dmltryAppFilesServer
				+ ", errorMessage=" + errorMessage + ", list=" + list + ", pageSize=" + pageSize + ", successMessage="
				+ successMessage + ", total=" + total + ", url=" + url + ", getCpage()=" + getCpage()
				+ ", getDmltryAppFiles()=" + getDmltryAppFiles() + ", getDmltryAppFilesServer()="
				+ getDmltryAppFilesServer() + ", getErrorMessage()=" + getErrorMessage() + ", getList()=" + getList()
				+ ", getPageSize()=" + getPageSize() + ", getSuccessMessage()=" + getSuccessMessage() + ", getTotal()="
				+ getTotal() + ", getUrl()=" + getUrl() + ", isAddDml()=" + isAddDml() + ", selAll()=" + selAll()
				+ ", selidDmltryAppFiles()=" + selidDmltryAppFiles() + ", toAdd()=" + toAdd() + ", getClass()="
				+ getClass() + ", hashCode()=" + hashCode() + ", toString()=" + super.toString() + "]";
	}

	public DmltryAppFiles getDmltryAppFiles2() {
		return dmltryAppFiles2;
	}

	public void setDmltryAppFiles2(DmltryAppFiles dmltryAppFiles2) {
		this.dmltryAppFiles2 = dmltryAppFiles2;
	}

	public DmltryAppFiles getDmltryAppFiles3() {
		return dmltryAppFiles3;
	}

	public void setDmltryAppFiles3(DmltryAppFiles dmltryAppFiles3) {
		this.dmltryAppFiles3 = dmltryAppFiles3;
	}

	public DmlAppFileUrl getDmlAppFileUrl() {
		return dmlAppFileUrl;
	}

	public void setDmlAppFileUrl(DmlAppFileUrl dmlAppFileUrl) {
		this.dmlAppFileUrl = dmlAppFileUrl;
	}

	public List<DmltryAppFiles> getDmltryAppFileslist() {
		return dmltryAppFileslist;
	}

	public void setDmltryAppFileslist(List<DmltryAppFiles> dmltryAppFileslist) {
		this.dmltryAppFileslist = dmltryAppFileslist;
	}

	public DmltryAppFiles getDmltryAppFiles4() {
		return dmltryAppFiles4;
	}

	public void setDmltryAppFiles4(DmltryAppFiles dmltryAppFiles4) {
		this.dmltryAppFiles4 = dmltryAppFiles4;
	}

	public DmlAppFileUrlServer getDmlAppFileUrlServer() {
		return dmlAppFileUrlServer;
	}

	public void setDmlAppFileUrlServer(DmlAppFileUrlServer dmlAppFileUrlServer) {
		this.dmlAppFileUrlServer = dmlAppFileUrlServer;
	}

	public File getFujian() {
		return fujian;
	}

	public void setFujian(File fujian) {
		this.fujian = fujian;
	}

	public String getFujianFileName() {
		return fujianFileName;
	}

	public void setFujianFileName(String fujianFileName) {
		this.fujianFileName = fujianFileName;
	}

	public String getFujianContentType() {
		return fujianContentType;
	}

	public void setFujianContentType(String fujianContentType) {
		this.fujianContentType = fujianContentType;
	}

	public DmlAppFileUrl getDmlAppFileUr2() {
		return dmlAppFileUr2;
	}

	public void setDmlAppFileUr2(DmlAppFileUrl dmlAppFileUr2) {
		this.dmlAppFileUr2 = dmlAppFileUr2;
	}


}
