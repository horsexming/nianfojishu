package com.task.action;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import org.apache.struts2.ServletActionContext;

import com.opensymphony.xwork2.ActionSupport;
import com.task.Server.android.ApkServer;
import com.task.util.MKUtil;

public class ApkAction extends ActionSupport {
	
	private ApkServer apkServer;
	private String versionCode;

	public void compareApk() {
		Properties prop = new Properties();
		String path = ServletActionContext.getServletContext().getRealPath(
				"/apkVersion.properties");
		InputStream in = null;
		try {
			in = new FileInputStream(path);
			prop.load(in);
			String versionCode1 = prop.getProperty("versionCode");
			Map<String, Object> map = new HashMap<String, Object>();
			if (versionCode == null || "".equals(versionCode) || (!"".equals(versionCode) && Integer.parseInt(versionCode1)>Integer.parseInt(versionCode))) {
				String url = prop.getProperty("url");
				map.put("istrue", false);
				map.put("url", url);
			} else {
//				String latLong = prop.getProperty("lat_long");
				String latLong = apkServer.findJWD_1();
				map.put("istrue", true);
				map.put("url", latLong);
			}
			MKUtil.writeJSON(map);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("istrue", true);
			map.put("url", null);
			MKUtil.writeJSON(map);
			e.printStackTrace();
		} finally {
			try {
				in.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	public void shouJianApk() {
		Properties prop = new Properties();
		String path = ServletActionContext.getServletContext().getRealPath(
		"/apkVersion1.properties");
		InputStream in = null;
		try {
			in = new FileInputStream(path);
			prop.load(in);
			String versionCode1 = prop.getProperty("versionCode");
			Map<String, Object> map = new HashMap<String, Object>();
			if (versionCode == null || !versionCode.equals(versionCode1)) {
				String url = prop.getProperty("url");
				map.put("istrue", false);
				map.put("url", url);
			} else {
				map.put("istrue", true);
				map.put("url", null);
			}
			MKUtil.writeJSON(map);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				in.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	//安卓读取经纬度
	public void findJWD() {
		List list = apkServer.findJWD();
		if (list != null && list.size() > 0) {
			MKUtil.writeJSON(true, "查询成功", list);
		} else {
			MKUtil.writeJSON(false, "没有提交的数据!", list);
		}
	}

	public String getVersionCode() {
		return versionCode;
	}

	public void setVersionCode(String versionCode) {
		this.versionCode = versionCode;
	}

	public ApkServer getApkServer() {
		return apkServer;
	}

	public void setApkServer(ApkServer apkServer) {
		this.apkServer = apkServer;
	}

}
