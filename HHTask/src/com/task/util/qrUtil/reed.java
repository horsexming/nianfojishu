package com.task.util.qrUtil;
//Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
//Jad home page: http://www.kpdus.com/jad.html
//Decompiler options: packimports(3) ansi lnc radix(10) lradix(10) 
//Source File Name:   reed.java



public class reed
{

         public reed()
         {
/*  84*/        N = 255;
         }

         static int mod(int i)
         {
/* 110*/        for(i = ((i -= 255) >> 8) + (i & 255); i >= 255; i = ((i -= 255) >> 8) + (i & 255));
/* 112*/        return i;
         }

         private int mult(int a, int b)
         {
/* 119*/        int sum_log = 0;
/* 120*/        if(a == 0 || b == 0)
/* 120*/            return 0;
/* 122*/        sum_log = gflog[a] + gflog[b];
/* 123*/        if(sum_log >= N)
/* 123*/            sum_log -= N;
/* 125*/        return gfi[sum_log];
         }

         public void calcRS(int data[], int k, int t2)
         {
/* 133*/        setpolynomial(t2);
/* 135*/        for(int i = k; i < k + t2; i++)
/* 136*/            data[i] = 0;

/* 138*/        for(int i = 0; i < k; i++)
             {
/* 140*/            int tmp = (short)(data[k] ^ data[i]);
/* 141*/            for(int j = 0; j < t2; j++)
/* 143*/                data[k + j] = (short)(data[k + j + 1] ^ mult(tmp, p[j]));

/* 146*/            data[(k + t2) - 1] = mult(tmp, p[t2 - 1]);
             }

         }

         private int gfadd(int add1, int add2)
         {
/* 156*/        int add3 = add1 ^ add2;
/* 157*/        return add3;
         }

         public void setpolynomial(int t2)
         {
/* 167*/        p = p68;
/* 168*/        if(t2 == 5)
/* 168*/            p = p5;
/* 169*/        if(t2 == 7)
/* 169*/            p = p7;
/* 170*/        if(t2 == 10)
/* 170*/            p = p10;
/* 171*/        if(t2 == 11)
/* 171*/            p = p11;
/* 172*/        if(t2 == 12)
/* 172*/            p = p12;
/* 173*/        if(t2 == 14)
/* 173*/            p = p14;
/* 174*/        if(t2 == 18)
/* 174*/            p = p18;
/* 175*/        if(t2 == 20)
/* 175*/            p = p20;
/* 176*/        if(t2 == 24)
/* 176*/            p = p24;
/* 177*/        if(t2 == 28)
/* 177*/            p = p28;
/* 178*/        if(t2 == 36)
/* 178*/            p = p36;
/* 179*/        if(t2 == 42)
/* 179*/            p = p42;
/* 180*/        if(t2 == 48)
/* 180*/            p = p48;
/* 181*/        if(t2 == 56)
/* 181*/            p = p56;
/* 182*/        if(t2 == 62)
/* 182*/            p = p62;
         }

         static final short gfi[] = {
/*  24*/        1, 2, 4, 8, 16, 32, 64, 128, 45, 90, 
/*  24*/        180, 69, 138, 57, 114, 228, 229, 231, 227, 235, 
/*  24*/        251, 219, 155, 27, 54, 108, 216, 157, 23, 46, 
/*  24*/        92, 184, 93, 186, 89, 178, 73, 146, 9, 18, 
/*  24*/        36, 72, 144, 13, 26, 52, 104, 208, 141, 55, 
/*  24*/        110, 220, 149, 7, 14, 28, 56, 112, 224, 237, 
/*  24*/        247, 195, 171, 123, 246, 193, 175, 115, 230, 225, 
/*  24*/        239, 243, 203, 187, 91, 182, 65, 130, 41, 82, 
/*  24*/        164, 101, 202, 185, 95, 190, 81, 162, 105, 210, 
/*  24*/        137, 63, 126, 252, 213, 135, 35, 70, 140, 53, 
/*  24*/        106, 212, 133, 39, 78, 156, 21, 42, 84, 168, 
/*  24*/        125, 250, 217, 159, 19, 38, 76, 152, 29, 58, 
/*  24*/        116, 232, 253, 215, 131, 43, 86, 172, 117, 234, 
/*  24*/        249, 223, 147, 11, 22, 44, 88, 176, 77, 154, 
/*  24*/        25, 50, 100, 200, 189, 87, 174, 113, 226, 233, 
/*  24*/        255, 211, 139, 59, 118, 236, 245, 199, 163, 107, 
/*  24*/        214, 129, 47, 94, 188, 85, 170, 121, 242, 201, 
/*  24*/        191, 83, 166, 97, 194, 169, 127, 254, 209, 143, 
/*  24*/        51, 102, 204, 181, 71, 142, 49, 98, 196, 165, 
/*  24*/        103, 206, 177, 79, 158, 17, 34, 68, 136, 61, 
/*  24*/        122, 244, 197, 167, 99, 198, 161, 111, 222, 145, 
/*  24*/        15, 30, 60, 120, 240, 205, 183, 67, 134, 33, 
/*  24*/        66, 132, 37, 74, 148, 5, 10, 20, 40, 80, 
/*  24*/        160, 109, 218, 153, 31, 62, 124, 248, 221, 151, 
/*  24*/        3, 6, 12, 24, 48, 96, 192, 173, 119, 238, 
/*  24*/        241, 207, 179, 75, 150
         };
         static final short gflog[] = {
/*  53*/        0, 0, 1, 240, 2, 225, 241, 53, 3, 38, 
/*  53*/        226, 133, 242, 43, 54, 210, 4, 195, 39, 114, 
/*  53*/        227, 106, 134, 28, 243, 140, 44, 23, 55, 118, 
/*  53*/        211, 234, 5, 219, 196, 96, 40, 222, 115, 103, 
/*  53*/        228, 78, 107, 125, 135, 8, 29, 162, 244, 186, 
/*  53*/        141, 180, 45, 99, 24, 49, 56, 13, 119, 153, 
/*  53*/        212, 199, 235, 91, 6, 76, 220, 217, 197, 11, 
/*  53*/        97, 184, 41, 36, 223, 253, 116, 138, 104, 193, 
/*  53*/        229, 86, 79, 171, 108, 165, 126, 145, 136, 34, 
/*  53*/        9, 74, 30, 32, 163, 84, 245, 173, 187, 204, 
/*  53*/        142, 81, 181, 190, 46, 88, 100, 159, 25, 231, 
/*  53*/        50, 207, 57, 147, 14, 67, 120, 128, 154, 248, 
/*  53*/        213, 167, 200, 63, 236, 110, 92, 176, 7, 161, 
/*  53*/        77, 124, 221, 102, 218, 95, 198, 90, 12, 152, 
/*  53*/        98, 48, 185, 179, 42, 209, 37, 132, 224, 52, 
/*  53*/        254, 239, 117, 233, 139, 22, 105, 27, 194, 113, 
/*  53*/        230, 206, 87, 158, 80, 189, 172, 203, 109, 175, 
/*  53*/        166, 62, 127, 247, 146, 66, 137, 192, 35, 252, 
/*  53*/        10, 183, 75, 216, 31, 83, 33, 73, 164, 144, 
/*  53*/        85, 170, 246, 65, 174, 61, 188, 202, 205, 157, 
/*  53*/        143, 169, 82, 72, 182, 215, 191, 251, 47, 178, 
/*  53*/        89, 151, 101, 94, 160, 123, 26, 112, 232, 21, 
/*  53*/        51, 238, 208, 131, 58, 69, 148, 18, 15, 16, 
/*  53*/        68, 17, 121, 149, 129, 19, 155, 59, 249, 70, 
/*  53*/        214, 250, 168, 71, 201, 156, 64, 60, 237, 130, 
/*  53*/        111, 20, 93, 122, 177, 150
         };
         static int K;
         public int N;
         static int p[];
         static final int p5[] = {
/*  89*/        62, 111, 15, 48, 228
         };
         static final int p7[] = {
/*  90*/        254, 92, 240, 134, 144, 68, 23
         };
         static final int p10[] = {
/*  91*/        61, 110, 255, 116, 248, 223, 166, 185, 24, 28
         };
         static final int p11[] = {
/*  92*/        120, 97, 60, 245, 39, 168, 194, 12, 205, 138, 
/*  92*/        175
         };
         static final int p12[] = {
/*  93*/        242, 100, 178, 97, 213, 142, 42, 61, 91, 158, 
/*  93*/        153, 41
         };
         static final int p14[] = {
/*  94*/        185, 83, 186, 18, 45, 138, 119, 157, 9, 95, 
/*  94*/        252, 192, 97, 156
         };
         static final int p18[] = {
/*  95*/        188, 90, 48, 225, 254, 94, 129, 109, 213, 241, 
/*  95*/        61, 66, 75, 188, 39, 100, 195, 83
         };
         static final int p20[] = {
/*  96*/        172, 186, 174, 27, 82, 108, 79, 253, 145, 153, 
/*  96*/        160, 188, 2, 168, 71, 233, 9, 244, 195, 15
         };
         static final int p24[] = {
/*  97*/        193, 50, 96, 184, 181, 12, 124, 254, 172, 5, 
/*  97*/        21, 155, 223, 251, 197, 155, 21, 176, 39, 109, 
/*  97*/        205, 88, 190, 52
         };
         static final int p28[] = {
/*  98*/        255, 93, 168, 233, 151, 120, 136, 141, 213, 110, 
/*  98*/        138, 17, 121, 249, 34, 75, 53, 170, 151, 37, 
/*  98*/        174, 103, 96, 71, 97, 43, 231, 211
         };
         static final int p36[] = {
/*  99*/        112, 81, 98, 225, 25, 59, 184, 175, 44, 115, 
/*  99*/        119, 95, 137, 101, 33, 68, 4, 2, 18, 229, 
/*  99*/        182, 80, 251, 220, 179, 84, 120, 102, 181, 162, 
/*  99*/        250, 130, 218, 242, 127, 245
         };
         static final int p42[] = {
/* 100*/        5, 9, 5, 226, 177, 150, 50, 69, 202, 248, 
/* 100*/        101, 54, 57, 253, 1, 21, 121, 57, 111, 214, 
/* 100*/        105, 167, 9, 100, 95, 175, 8, 242, 133, 245, 
/* 100*/        2, 122, 105, 247, 153, 22, 38, 19, 31, 137, 
/* 100*/        193, 77
         };
         static final int p48[] = {
/* 101*/        19, 225, 253, 92, 213, 69, 175, 160, 147, 187, 
/* 101*/        87, 176, 44, 82, 240, 186, 138, 66, 100, 120, 
/* 101*/        88, 131, 205, 170, 90, 37, 23, 118, 147, 16, 
/* 101*/        106, 191, 87, 237, 188, 205, 231, 238, 133, 238, 
/* 101*/        22, 117, 32, 96, 223, 172, 132, 245
         };
         static final int p56[] = {
/* 102*/        46, 143, 53, 233, 107, 203, 43, 155, 28, 247, 
/* 102*/        67, 127, 245, 137, 13, 164, 207, 62, 117, 201, 
/* 102*/        150, 22, 238, 144, 232, 29, 203, 117, 234, 218, 
/* 102*/        146, 228, 54, 132, 200, 38, 223, 36, 159, 150, 
/* 102*/        235, 215, 192, 230, 170, 175, 29, 100, 208, 220, 
/* 102*/        17, 12, 238, 223, 9, 175
         };
         static final int p62[] = {
/* 103*/        204, 11, 47, 86, 124, 224, 166, 94, 7, 232, 
/* 103*/        107, 4, 170, 176, 31, 163, 17, 188, 130, 40, 
/* 103*/        10, 87, 63, 51, 218, 27, 6, 147, 44, 161, 
/* 103*/        71, 114, 64, 175, 221, 185, 106, 250, 190, 197, 
/* 103*/        63, 245, 230, 134, 112, 185, 37, 196, 108, 143, 
/* 103*/        189, 201, 188, 202, 118, 39, 210, 144, 50, 169, 
/* 103*/        93, 242
         };
         static final int p68[] = {
/* 104*/        186, 82, 103, 96, 63, 132, 153, 108, 54, 64, 
/* 104*/        189, 211, 232, 49, 25, 172, 52, 59, 241, 181, 
/* 104*/        239, 223, 136, 231, 210, 96, 232, 220, 25, 179, 
/* 104*/        167, 202, 185, 153, 139, 66, 236, 227, 160, 15, 
/* 104*/        213, 93, 122, 68, 177, 158, 197, 234, 180, 248, 
/* 104*/        136, 213, 127, 73, 36, 154, 244, 147, 33, 89, 
/* 104*/        56, 159, 149, 251, 89, 173, 228, 220
         };

}


/*
	DECOMPILATION REPORT

	Decompiled from: D:\workpase\TestD\lib\IDADataMatrix.jar
	Total time: 145 ms
	Jad reported messages/errors:
	Exit status: 0
	Caught exceptions:
*/
