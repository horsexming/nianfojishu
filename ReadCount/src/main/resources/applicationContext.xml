<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" 
       xmlns:security="http://www.springframework.org/schema/security"      
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/security
     http://www.springframework.org/schema/security/spring-security-5.1.0.xsd
     http://mybatis.org/schema/mybatis-spring 
     http://mybatis.org/schema/mybatis-spring.xsd">
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 配置注解扫描的包 -->
	<context:component-scan base-package="com.hhu.count" />
	<!-- <context:component-scan base-package="com.hhu.count" >
   		<context:exclude-filter type="annotation" 
  		 	expression="org.springframework.stereotype.Controller"/> 
  	</context:component-scan> -->
	<!-- 配置数据源c3p0 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<!--连接池启动时的初始连接值  -->
		<property name="initialPoolSize" value="${jdbc.initsize}" />
		<!--配置最大空闲值和最小空闲值  -->
		<property name="maxPoolSize" value="${jdbc.maxsize}" />
		<property name="minPoolSize" value="${jdbc.minsize}" />
	</bean>	
	<!--配置会话工厂  -->
	<bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--设置数据源  -->
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath*:mapper/*.xml" ></property>
		<!-- 配置分页插件 -->
    	<property name="plugins">
        <array>
            <bean class="com.github.pagehelper.PageInterceptor">
                <property name="properties">
                    <value>
                        helperDialect=postgresql
                        reasonable=true
                    </value>
                </property>
            </bean>
        </array>
		</property>
		
	</bean>
	
	<!-- 配置扫描器，将mybatis的接口的实现加入到ioc容器中 -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <!-- 扫描所有的dao实现 ,加入到IOC容器中-->
	   	<property name="basePackage" value="com.hhu.count.dao"></property>
   </bean> 
	<!-- 配置事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="tx-Advice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="load*" read-only="true" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
			<tx:method name="*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="service" expression="execution(* com.hhu.count.serverImpl..*.*(..))" />
		<aop:advisor pointcut-ref="service" advice-ref="tx-Advice" />
	</aop:config>

</beans>